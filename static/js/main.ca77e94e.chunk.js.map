{"version":3,"sources":["Components/TodoCard.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoCard","props","todo","index","doneTodo","removeTodo","className","isDone","text","onClick","TodoList","addTodo","todos","clearAll","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","placeholder","map","App","state","JSON","parse","localStorage","getItem","setTodos","newTodos","setItem","stringify","window","location","reload","checkDoneButton","splice","removeItem","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca77e94e.chunk.js","sourcesContent":["import './TodoCard.css';\n\nconst TodoCard = props => {\n  const {\n    todo, index, doneTodo, removeTodo,\n  } = props;\n\n  return (\n      <article className={todo.isDone ? 'todo-list__todo--done' : 'todo-list__todo'}>\n        <p className={todo.isDone ? 'todo__text--underlined' : 'todo__text'}>{ todo.text }</p>\n        <button\n          className='todo-list__button-done'\n          onClick={() => doneTodo(index)}\n          >\n            {todo.isDone ? 'Not Done' : 'Done'}\n          </button>\n        <button className={todo.isDone ? 'todo-list__button-remove' : 'todo-list__button-remove--hidden'} onClick={() => removeTodo(index)}>x</button>\n      </article>\n  );\n};\n\nexport default TodoCard;\n","import React, { useState } from 'react';\nimport './TodoList.css';\n\nconst TodoList = props => {\n  const {\n    TodoCard, addTodo, todos, doneTodo, removeTodo, clearAll,\n  } = props;\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return (\n    <section className='todo-list'>\n      <form className='todo-list__form' onSubmit={handleSubmit}>\n        <input\n          type='text'\n          className='form__input'\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          placeholder='Add a ToDo...'\n          />\n          <button\n          className='form__submit'\n          type='submit'\n          >\n            Add\n          </button>\n      </form>\n      {todos.map((todo, index) => (\n        <TodoCard\n          key={index}\n          index={index}\n          todo={todo}\n          doneTodo={doneTodo}\n          removeTodo={removeTodo}\n          />\n      ))}\n      <section className='pending'>\n        <h3 className='pending__title'>Pending &#x21b4;</h3>\n      </section>\n      <section className='completed'>\n        <h3 className='completed__title'>Completed &#x21b4;</h3>\n      </section>\n      <button onClick={() => clearAll()} className='todo-list__clear-button'>Clear List</button>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport TodoCard from './Components/TodoCard';\nimport TodoList from './Components/TodoList';\nimport './App.css';\n\nconst App = () => {\n  const state = JSON.parse(localStorage.getItem('todos'));\n\n  const [todos, setTodos] = useState(\n    state || [],\n  );\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    setTodos(newTodos);\n    window.location.reload();\n  };\n\n  const checkDoneButton = index => {\n    if (todos[index].isDone) {\n      todos[index].isDone = false;\n    } else {\n      todos[index].isDone = true;\n    }\n  };\n\n  const doneTodo = index => {\n    const newTodos = [...todos];\n    checkDoneButton(index);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    localStorage.removeItem(index);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const clearAll = () => {\n    localStorage.clear();\n    setTodos([]);\n  };\n\n  return (\n    <main className='App'>\n      <header className='header'>\n        <h1 className='header__title'>ToDo List</h1>\n      </header>\n      <TodoList\n        TodoCard={TodoCard}\n        addTodo={addTodo}\n        doneTodo={doneTodo}\n        removeTodo={removeTodo}\n        todos={todos}\n        clearAll={clearAll}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}